
AVRASM ver. 2.1.30  C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm Wed Nov 16 12:09:08 2022

C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1096): warning: Register r13 already defined by the .DEF directive
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _ms=R4
                 	.DEF _ms_msb=R5
                 	.DEF _s=R6
                 	.DEF _s_msb=R7
                 	.DEF _m=R8
                 	.DEF _m_msb=R9
                 	.DEF _h=R10
                 	.DEF _h_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0089 	JMP  _timer1_compa_isr
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 0000
00002b 0000      	.DB  0x0,0x0,0x0,0x0
00002c 003a
00002d 0017      	.DB  0x3A,0x0,0x17,0x0
                 
                 _0x0:
00002e 2020
00002f 4c00
000030 4443
000031 4320      	.DB  0x20,0x20,0x0,0x4C,0x43,0x44,0x20,0x43
000032 4f4c
000033 4b43
000034 3a00
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1135): warning: .cseg .db misalignment - padding zero byte
000035 0000      	.DB  0x4C,0x4F,0x43,0x4B,0x0,0x3A,0x0
                 _0x2000060:
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1137): warning: .cseg .db misalignment - padding zero byte
000036 0001      	.DB  0x1
                 _0x2000000:
000037 4e2d
000038 4e41
000039 4900
00003a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ASUS\Desktop\term_4003\AzRizpar\HW6\Debug\List\Code.asm(1140): warning: .cseg .db misalignment - padding zero byte
00003b 0000      	.DB  0x0
                 _0x2040003:
00003c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003d 0008      	.DW  0x08
00003e 0004      	.DW  0x04
00003f 0054      	.DW  __REG_VARS*2
                 
000040 0003      	.DW  0x03
000041 0260      	.DW  _0x5
000042 005c      	.DW  _0x0*2
                 
000043 0003      	.DW  0x03
000044 0263      	.DW  _0x5+3
000045 005c      	.DW  _0x0*2
                 
000046 0003      	.DW  0x03
000047 0266      	.DW  _0x5+6
000048 005c      	.DW  _0x0*2
                 
000049 000a      	.DW  0x0A
00004a 0269      	.DW  _0x8
00004b 005f      	.DW  _0x0*2+3
                 
00004c 0002      	.DW  0x02
00004d 0273      	.DW  _0x8+10
00004e 0069      	.DW  _0x0*2+13
                 
00004f 0002      	.DW  0x02
000050 0275      	.DW  _0x8+12
000051 0069      	.DW  _0x0*2+13
                 
000052 0002      	.DW  0x02
000053 0277      	.DW  _0x8+14
000054 0069      	.DW  _0x0*2+13
                 
000055 0001      	.DW  0x01
000056 027d      	.DW  __seed_G100
000057 006c      	.DW  _0x2000060*2
                 
000058 0002      	.DW  0x02
000059 0281      	.DW  __base_y_G102
00005a 0078      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00005b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005c 94f8      	CLI
00005d 27ee      	CLR  R30
00005e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005f e0f1      	LDI  R31,1
000060 bffb      	OUT  GICR,R31
000061 bfeb      	OUT  GICR,R30
000062 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000063 e08d      	LDI  R24,(14-2)+1
000064 e0a2      	LDI  R26,2
000065 27bb      	CLR  R27
                 __CLEAR_REG:
000066 93ed      	ST   X+,R30
000067 958a      	DEC  R24
000068 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000069 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006c 93ed      	ST   X+,R30
00006d 9701      	SBIW R24,1
00006e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006f e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000070 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000071 9185      	LPM  R24,Z+
000072 9195      	LPM  R25,Z+
000073 9700      	SBIW R24,0
000074 f061      	BREQ __GLOBAL_INI_END
000075 91a5      	LPM  R26,Z+
000076 91b5      	LPM  R27,Z+
000077 9005      	LPM  R0,Z+
000078 9015      	LPM  R1,Z+
000079 01bf      	MOVW R22,R30
00007a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007b 9005      	LPM  R0,Z+
00007c 920d      	ST   X+,R0
00007d 9701      	SBIW R24,1
00007e f7e1      	BRNE __GLOBAL_INI_LOOP
00007f 01fb      	MOVW R30,R22
000080 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000081 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000082 bfed      	OUT  SPL,R30
000083 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000084 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000085 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000086 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000087 940c 0115 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;// bavan divaaniazar 98522211
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;unsigned int ms = 0, s = 0, m = 58, h = 23;
                 ;char str_ms[], str_s[], str_m[], str_h[];
                 ;
                 ;interrupt[TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 000D {
                 
                 	.CSEG
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
000089 920a      	ST   -Y,R0
00008a 921a      	ST   -Y,R1
00008b 92fa      	ST   -Y,R15
00008c 936a      	ST   -Y,R22
00008d 937a      	ST   -Y,R23
00008e 938a      	ST   -Y,R24
00008f 939a      	ST   -Y,R25
000090 93aa      	ST   -Y,R26
000091 93ba      	ST   -Y,R27
000092 93ea      	ST   -Y,R30
000093 93fa      	ST   -Y,R31
000094 b7ef      	IN   R30,SREG
000095 93ea      	ST   -Y,R30
                 ; 0000 000E     ms += 1;
000096 01f2      	MOVW R30,R4
000097 9631      	ADIW R30,1
000098 012f      	MOVW R4,R30
                 ; 0000 000F 
                 ; 0000 0010     if (ms == 10)
000099 e0ea      	LDI  R30,LOW(10)
00009a e0f0      	LDI  R31,HIGH(10)
00009b 15e4      	CP   R30,R4
00009c 05f5      	CPC  R31,R5
00009d f429      	BRNE _0x3
                 ; 0000 0011     {
                 ; 0000 0012         ms = 0;
00009e 2444      	CLR  R4
00009f 2455      	CLR  R5
                 ; 0000 0013         s++;
0000a0 01f3      	MOVW R30,R6
0000a1 9631      	ADIW R30,1
0000a2 013f      	MOVW R6,R30
                 ; 0000 0014     }
                 ; 0000 0015     if (s == 60)
                 _0x3:
0000a3 e3ec      	LDI  R30,LOW(60)
0000a4 e0f0      	LDI  R31,HIGH(60)
0000a5 15e6      	CP   R30,R6
0000a6 05f7      	CPC  R31,R7
0000a7 f461      	BRNE _0x4
                 ; 0000 0016     {
                 ; 0000 0017         s = 0;
0000a8 2466      	CLR  R6
0000a9 2477      	CLR  R7
                 ; 0000 0018         m++;
0000aa 01f4      	MOVW R30,R8
0000ab 9631      	ADIW R30,1
0000ac 014f      	MOVW R8,R30
                 ; 0000 0019 
                 ; 0000 001A         lcd_gotoxy(9, 1);
0000ad e0e9      	LDI  R30,LOW(9)
0000ae 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 001B         lcd_puts("  ");
                +
0000b0 e6a0     +LDI R26 , LOW ( _0x5 + ( 0 ) )
0000b1 e0b2     +LDI R27 , HIGH ( _0x5 + ( 0 ) )
                 	__POINTW2MN _0x5,0
0000b2 940e 01cd 	CALL _lcd_puts
                 ; 0000 001C     }
                 ; 0000 001D 
                 ; 0000 001E     if (m == 60)
                 _0x4:
0000b4 e3ec      	LDI  R30,LOW(60)
0000b5 e0f0      	LDI  R31,HIGH(60)
0000b6 15e8      	CP   R30,R8
0000b7 05f9      	CPC  R31,R9
0000b8 f461      	BRNE _0x6
                 ; 0000 001F     {
                 ; 0000 0020         m = 0;
0000b9 2488      	CLR  R8
0000ba 2499      	CLR  R9
                 ; 0000 0021         h++;
0000bb 01f5      	MOVW R30,R10
0000bc 9631      	ADIW R30,1
0000bd 015f      	MOVW R10,R30
                 ; 0000 0022 
                 ; 0000 0023         lcd_gotoxy(6, 1);
0000be e0e6      	LDI  R30,LOW(6)
0000bf 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 0024         lcd_puts("  ");
                +
0000c1 e6a3     +LDI R26 , LOW ( _0x5 + ( 3 ) )
0000c2 e0b2     +LDI R27 , HIGH ( _0x5 + ( 3 ) )
                 	__POINTW2MN _0x5,3
0000c3 940e 01cd 	CALL _lcd_puts
                 ; 0000 0025     }
                 ; 0000 0026 
                 ; 0000 0027     if (h == 24)
                 _0x6:
0000c5 e1e8      	LDI  R30,LOW(24)
0000c6 e0f0      	LDI  R31,HIGH(24)
0000c7 15ea      	CP   R30,R10
0000c8 05fb      	CPC  R31,R11
0000c9 f449      	BRNE _0x7
                 ; 0000 0028     {
                 ; 0000 0029         h = 0;
0000ca 24aa      	CLR  R10
0000cb 24bb      	CLR  R11
                 ; 0000 002A         lcd_gotoxy(3, 1);
0000cc e0e3      	LDI  R30,LOW(3)
0000cd 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 002B         lcd_puts("  ");
                +
0000cf e6a6     +LDI R26 , LOW ( _0x5 + ( 6 ) )
0000d0 e0b2     +LDI R27 , HIGH ( _0x5 + ( 6 ) )
                 	__POINTW2MN _0x5,6
0000d1 940e 01cd 	CALL _lcd_puts
                 ; 0000 002C     }
                 ; 0000 002D 
                 ; 0000 002E     itoa(ms, str_ms);
                 _0x7:
0000d3 925a      	ST   -Y,R5
0000d4 924a      	ST   -Y,R4
0000d5 e7a9      	LDI  R26,LOW(_str_ms)
0000d6 e0b2      	LDI  R27,HIGH(_str_ms)
0000d7 940e 014f 	CALL _itoa
                 ; 0000 002F     lcd_gotoxy(12, 1);
0000d9 e0ec      	LDI  R30,LOW(12)
0000da 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 0030     lcd_puts(str_ms);
0000dc e7a9      	LDI  R26,LOW(_str_ms)
0000dd e0b2      	LDI  R27,HIGH(_str_ms)
0000de 940e 01cd 	CALL _lcd_puts
                 ; 0000 0031 
                 ; 0000 0032     itoa(s, str_s);
0000e0 927a      	ST   -Y,R7
0000e1 926a      	ST   -Y,R6
0000e2 e7aa      	LDI  R26,LOW(_str_s)
0000e3 e0b2      	LDI  R27,HIGH(_str_s)
0000e4 940e 014f 	CALL _itoa
                 ; 0000 0033     lcd_gotoxy(9, 1);
0000e6 e0e9      	LDI  R30,LOW(9)
0000e7 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 0034     lcd_puts(str_s);
0000e9 e7aa      	LDI  R26,LOW(_str_s)
0000ea e0b2      	LDI  R27,HIGH(_str_s)
0000eb 940e 01cd 	CALL _lcd_puts
                 ; 0000 0035 
                 ; 0000 0036     itoa(m, str_m);
0000ed 929a      	ST   -Y,R9
0000ee 928a      	ST   -Y,R8
0000ef e7ab      	LDI  R26,LOW(_str_m)
0000f0 e0b2      	LDI  R27,HIGH(_str_m)
0000f1 940e 014f 	CALL _itoa
                 ; 0000 0037     lcd_gotoxy(6, 1);
0000f3 e0e6      	LDI  R30,LOW(6)
0000f4 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 0038     lcd_puts(str_m);
0000f6 e7ab      	LDI  R26,LOW(_str_m)
0000f7 e0b2      	LDI  R27,HIGH(_str_m)
0000f8 940e 01cd 	CALL _lcd_puts
                 ; 0000 0039 
                 ; 0000 003A     itoa(h, str_h);
0000fa 92ba      	ST   -Y,R11
0000fb 92aa      	ST   -Y,R10
0000fc e7ac      	LDI  R26,LOW(_str_h)
0000fd e0b2      	LDI  R27,HIGH(_str_h)
0000fe 940e 014f 	CALL _itoa
                 ; 0000 003B     lcd_gotoxy(3, 1);
000100 e0e3      	LDI  R30,LOW(3)
000101 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 003C     lcd_puts(str_h);
000103 e7ac      	LDI  R26,LOW(_str_h)
000104 e0b2      	LDI  R27,HIGH(_str_h)
000105 940e 01cd 	CALL _lcd_puts
                 ; 0000 003D }
000107 91e9      	LD   R30,Y+
000108 bfef      	OUT  SREG,R30
000109 91f9      	LD   R31,Y+
00010a 91e9      	LD   R30,Y+
00010b 91b9      	LD   R27,Y+
00010c 91a9      	LD   R26,Y+
00010d 9199      	LD   R25,Y+
00010e 9189      	LD   R24,Y+
00010f 9179      	LD   R23,Y+
000110 9169      	LD   R22,Y+
000111 90f9      	LD   R15,Y+
000112 9019      	LD   R1,Y+
000113 9009      	LD   R0,Y+
000114 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 _0x5:
000260           	.BYTE 0x9
                 ;
                 ;void main(void)
                 ; 0000 0040 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0041 
                 ; 0000 0042     DDRC = 0xFF;
000115 efef      	LDI  R30,LOW(255)
000116 bbe4      	OUT  0x14,R30
                 ; 0000 0043     PORTC = 0x00;
000117 e0e0      	LDI  R30,LOW(0)
000118 bbe5      	OUT  0x15,R30
                 ; 0000 0044     TCCR1A = 0x00;
000119 bdef      	OUT  0x2F,R30
                 ; 0000 0045     TCCR1B = 0x0C;
00011a e0ec      	LDI  R30,LOW(12)
00011b bdee      	OUT  0x2E,R30
                 ; 0000 0046     TCNT1H = 0x00;
00011c e0e0      	LDI  R30,LOW(0)
00011d bded      	OUT  0x2D,R30
                 ; 0000 0047     TCNT1L = 0x00;
00011e bdec      	OUT  0x2C,R30
                 ; 0000 0048     ICR1H = 0x00;
00011f bde7      	OUT  0x27,R30
                 ; 0000 0049     ICR1L = 0x00;
000120 bde6      	OUT  0x26,R30
                 ; 0000 004A     OCR1AH = 0x0C;
000121 e0ec      	LDI  R30,LOW(12)
000122 bdeb      	OUT  0x2B,R30
                 ; 0000 004B     OCR1AL = 0x35;
000123 e3e5      	LDI  R30,LOW(53)
000124 bdea      	OUT  0x2A,R30
                 ; 0000 004C     OCR1BH = 0x00;
000125 e0e0      	LDI  R30,LOW(0)
000126 bde9      	OUT  0x29,R30
                 ; 0000 004D     OCR1BL = 0x00;
000127 bde8      	OUT  0x28,R30
                 ; 0000 004E     TIMSK = 0x10;
000128 e1e0      	LDI  R30,LOW(16)
000129 bfe9      	OUT  0x39,R30
                 ; 0000 004F 
                 ; 0000 0050 #asm("sei")
00012a 9478      	sei
                 ; 0000 0051 
                 ; 0000 0052     lcd_init(16);
00012b e1a0      	LDI  R26,LOW(16)
00012c 940e 01de 	CALL _lcd_init
                 ; 0000 0053     lcd_clear();
00012e 940e 01aa 	CALL _lcd_clear
                 ; 0000 0054 
                 ; 0000 0055     lcd_gotoxy(3, 0);
000130 e0e3      	LDI  R30,LOW(3)
000131 93ea      	ST   -Y,R30
000132 e0a0      	LDI  R26,LOW(0)
000133 940e 019d 	CALL _lcd_gotoxy
                 ; 0000 0056     lcd_puts("LCD CLOCK");
                +
000135 e6a9     +LDI R26 , LOW ( _0x8 + ( 0 ) )
000136 e0b2     +LDI R27 , HIGH ( _0x8 + ( 0 ) )
                 	__POINTW2MN _0x8,0
000137 940e 01cd 	CALL _lcd_puts
                 ; 0000 0057 
                 ; 0000 0058     lcd_gotoxy(5, 1);
000139 e0e5      	LDI  R30,LOW(5)
00013a 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 0059     lcd_puts(":");
                +
00013c e7a3     +LDI R26 , LOW ( _0x8 + ( 10 ) )
00013d e0b2     +LDI R27 , HIGH ( _0x8 + ( 10 ) )
                 	__POINTW2MN _0x8,10
00013e 940e 01cd 	CALL _lcd_puts
                 ; 0000 005A     lcd_gotoxy(8, 1);
000140 e0e8      	LDI  R30,LOW(8)
000141 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 005B     lcd_puts(":");
                +
000143 e7a5     +LDI R26 , LOW ( _0x8 + ( 12 ) )
000144 e0b2     +LDI R27 , HIGH ( _0x8 + ( 12 ) )
                 	__POINTW2MN _0x8,12
000145 940e 01cd 	CALL _lcd_puts
                 ; 0000 005C     lcd_gotoxy(11, 1);
000147 e0eb      	LDI  R30,LOW(11)
000148 940e 020d 	CALL SUBOPT_0x0
                 ; 0000 005D     lcd_puts(":");
                +
00014a e7a7     +LDI R26 , LOW ( _0x8 + ( 14 ) )
00014b e0b2     +LDI R27 , HIGH ( _0x8 + ( 14 ) )
                 	__POINTW2MN _0x8,14
00014c 940e 01cd 	CALL _lcd_puts
                 ; 0000 005E 
                 ; 0000 005F }
                 _0x9:
00014e cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.DSEG
                 _0x8:
000269           	.BYTE 0x10
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
00014f 93ba      	ST   -Y,R27
000150 93aa      	ST   -Y,R26
000151 91a9          ld   r26,y+
000152 91b9          ld   r27,y+
000153 91e9          ld   r30,y+
000154 91f9          ld   r31,y+
000155 9630          adiw r30,0
000156 f42a          brpl __itoa0
000157 95e0          com  r30
000158 95f0          com  r31
000159 9631          adiw r30,1
00015a e26d          ldi  r22,'-'
00015b 936d          st   x+,r22
                 __itoa0:
00015c 94e8          clt
00015d e180          ldi  r24,low(10000)
00015e e297          ldi  r25,high(10000)
00015f d00d          rcall __itoa1
000160 ee88          ldi  r24,low(1000)
000161 e093          ldi  r25,high(1000)
000162 d00a          rcall __itoa1
000163 e684          ldi  r24,100
000164 2799          clr  r25
000165 d007          rcall __itoa1
000166 e08a          ldi  r24,10
000167 d005          rcall __itoa1
000168 2f6e          mov  r22,r30
000169 d010          rcall __itoa5
00016a 2766          clr  r22
00016b 936c          st   x,r22
00016c 9508          ret
                 
                 __itoa1:
00016d 2766          clr	 r22
                 __itoa2:
00016e 17e8          cp   r30,r24
00016f 07f9          cpc  r31,r25
000170 f020          brlo __itoa3
000171 9563          inc  r22
000172 1be8          sub  r30,r24
000173 0bf9          sbc  r31,r25
000174 f7c9          brne __itoa2
                 __itoa3:
000175 2366          tst  r22
000176 f411          brne __itoa4
000177 f016          brts __itoa5
000178 9508          ret
                 __itoa4:
000179 9468          set
                 __itoa5:
00017a 5d60          subi r22,-0x30
00017b 936d          st   x+,r22
00017c 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
00017d 93aa      	ST   -Y,R26
00017e b3e5      	IN   R30,0x15
00017f 70ef      	ANDI R30,LOW(0xF)
000180 2fae      	MOV  R26,R30
000181 81e8      	LD   R30,Y
000182 7fe0      	ANDI R30,LOW(0xF0)
000183 2bea      	OR   R30,R26
000184 bbe5      	OUT  0x15,R30
                +
000185 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000186 958a     +DEC R24
000187 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000188 9aaa      	SBI  0x15,2
                +
000189 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00018a 958a     +DEC R24
00018b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00018c 98aa      	CBI  0x15,2
                +
00018d e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00018e 958a     +DEC R24
00018f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000190 c07a      	RJMP _0x20A0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000191 93aa      	ST   -Y,R26
000192 81a8      	LD   R26,Y
000193 dfe9      	RCALL __lcd_write_nibble_G102
000194 81e8          ld    r30,y
000195 95e2          swap  r30
000196 83e8          st    y,r30
000197 81a8      	LD   R26,Y
000198 dfe4      	RCALL __lcd_write_nibble_G102
                +
000199 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00019a 958a     +DEC R24
00019b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00019c c06e      	RJMP _0x20A0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00019d 93aa      	ST   -Y,R26
00019e 81e8      	LD   R30,Y
00019f e0f0      	LDI  R31,0
0001a0 57ef      	SUBI R30,LOW(-__base_y_G102)
0001a1 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0001a2 81e0      	LD   R30,Z
0001a3 81a9      	LDD  R26,Y+1
0001a4 0fae      	ADD  R26,R30
0001a5 dfeb      	RCALL __lcd_write_data
0001a6 80d9      	LDD  R13,Y+1
0001a7 80c8      	LDD  R12,Y+0
0001a8 9622      	ADIW R28,2
0001a9 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001aa e0a2      	LDI  R26,LOW(2)
0001ab 940e 0211 	CALL SUBOPT_0x1
0001ad e0ac      	LDI  R26,LOW(12)
0001ae dfe2      	RCALL __lcd_write_data
0001af e0a1      	LDI  R26,LOW(1)
0001b0 940e 0211 	CALL SUBOPT_0x1
0001b2 e0e0      	LDI  R30,LOW(0)
0001b3 2ece      	MOV  R12,R30
0001b4 2ede      	MOV  R13,R30
0001b5 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001b6 93aa      	ST   -Y,R26
0001b7 81a8      	LD   R26,Y
0001b8 30aa      	CPI  R26,LOW(0xA)
0001b9 f021      	BREQ _0x2040005
0001ba 91e0 0285 	LDS  R30,__lcd_maxx
0001bc 16de      	CP   R13,R30
0001bd f048      	BRLO _0x2040004
                 _0x2040005:
0001be e0e0      	LDI  R30,LOW(0)
0001bf 93ea      	ST   -Y,R30
0001c0 94c3      	INC  R12
0001c1 2dac      	MOV  R26,R12
0001c2 dfda      	RCALL _lcd_gotoxy
0001c3 81a8      	LD   R26,Y
0001c4 30aa      	CPI  R26,LOW(0xA)
0001c5 f409      	BRNE _0x2040007
0001c6 c044      	RJMP _0x20A0001
                 _0x2040007:
                 _0x2040004:
0001c7 94d3      	INC  R13
0001c8 9aa8      	SBI  0x15,0
0001c9 81a8      	LD   R26,Y
0001ca dfc6      	RCALL __lcd_write_data
0001cb 98a8      	CBI  0x15,0
0001cc c03e      	RJMP _0x20A0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001cd 93ba      	ST   -Y,R27
0001ce 93aa      	ST   -Y,R26
0001cf 931a      	ST   -Y,R17
                 _0x2040008:
0001d0 81a9      	LDD  R26,Y+1
0001d1 81ba      	LDD  R27,Y+1+1
0001d2 91ed      	LD   R30,X+
0001d3 83a9      	STD  Y+1,R26
0001d4 83ba      	STD  Y+1+1,R27
0001d5 2f1e      	MOV  R17,R30
0001d6 30e0      	CPI  R30,0
0001d7 f019      	BREQ _0x204000A
0001d8 2fa1      	MOV  R26,R17
0001d9 dfdc      	RCALL _lcd_putchar
0001da cff5      	RJMP _0x2040008
                 _0x204000A:
0001db 8118      	LDD  R17,Y+0
0001dc 9623      	ADIW R28,3
0001dd 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001de 93aa      	ST   -Y,R26
0001df b3e4      	IN   R30,0x14
0001e0 6fe0      	ORI  R30,LOW(0xF0)
0001e1 bbe4      	OUT  0x14,R30
0001e2 9aa2      	SBI  0x14,2
0001e3 9aa0      	SBI  0x14,0
0001e4 9aa1      	SBI  0x14,1
0001e5 98aa      	CBI  0x15,2
0001e6 98a8      	CBI  0x15,0
0001e7 98a9      	CBI  0x15,1
0001e8 81e8      	LD   R30,Y
0001e9 93e0 0285 	STS  __lcd_maxx,R30
0001eb 58e0      	SUBI R30,-LOW(128)
                +
0001ec 93e0 0283+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
0001ee 81e8      	LD   R30,Y
0001ef 54e0      	SUBI R30,-LOW(192)
                +
0001f0 93e0 0284+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
0001f2 e1a4      	LDI  R26,LOW(20)
0001f3 e0b0      	LDI  R27,0
0001f4 940e 021f 	CALL _delay_ms
0001f6 940e 0217 	CALL SUBOPT_0x2
0001f8 940e 0217 	CALL SUBOPT_0x2
0001fa 940e 0217 	CALL SUBOPT_0x2
0001fc e2a0      	LDI  R26,LOW(32)
0001fd df7f      	RCALL __lcd_write_nibble_G102
                +
0001fe ec88     +LDI R24 , LOW ( 200 )
0001ff e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000200 9701     +SBIW R24 , 1
000201 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000202 e2a8      	LDI  R26,LOW(40)
000203 df8d      	RCALL __lcd_write_data
000204 e0a4      	LDI  R26,LOW(4)
000205 df8b      	RCALL __lcd_write_data
000206 e8a5      	LDI  R26,LOW(133)
000207 df89      	RCALL __lcd_write_data
000208 e0a6      	LDI  R26,LOW(6)
000209 df87      	RCALL __lcd_write_data
00020a df9f      	RCALL _lcd_clear
                 _0x20A0001:
00020b 9621      	ADIW R28,1
00020c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _str_ms:
000279           	.BYTE 0x1
                 _str_s:
00027a           	.BYTE 0x1
                 _str_m:
00027b           	.BYTE 0x1
                 _str_h:
00027c           	.BYTE 0x1
                 __seed_G100:
00027d           	.BYTE 0x4
                 __base_y_G102:
000281           	.BYTE 0x4
                 __lcd_maxx:
000285           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x0:
00020d 93ea      	ST   -Y,R30
00020e e0a1      	LDI  R26,LOW(1)
00020f 940c 019d 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000211 940e 0191 	CALL __lcd_write_data
000213 e0a3      	LDI  R26,LOW(3)
000214 e0b0      	LDI  R27,0
000215 940c 021f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000217 e3a0      	LDI  R26,LOW(48)
000218 940e 017d 	CALL __lcd_write_nibble_G102
                +
00021a ec88     +LDI R24 , LOW ( 200 )
00021b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00021c 9701     +SBIW R24 , 1
00021d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00021e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00021f 9610      	adiw r26,0
000220 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000221 ed80     +LDI R24 , LOW ( 0x7D0 )
000222 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000223 9701     +SBIW R24 , 1
000224 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000225 95a8      	wdr
000226 9711      	sbiw r26,1
000227 f7c9      	brne __delay_ms0
                 __delay_ms1:
000228 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   6 r1 :   3 r2 :   0 r3 :   0 r4 :   5 r5 :   3 r6 :   5 r7 :   3 
r8 :   5 r9 :   3 r10:   5 r11:   3 r12:   4 r13:   4 r14:   0 r15:   2 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:  14 r23:   2 
r24:  29 r25:  12 r26:  59 r27:  26 r28:   4 r29:   1 r30: 115 r31:  19 
x  :   7 y  :  68 z  :   8 
Registers used: 27 out of 35 (77.1%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :  10 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   4 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  36 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   6 cpc   :   5 cpi   :   3 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   3 jmp   :  24 ld    :  28 ldd   :   6 ldi   : 105 
lds   :   1 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   7 movw  :  11 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  22 pop   :   0 push  :   0 rcall :  18 ret   :   9 
reti  :   1 rjmp  :   7 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  40 std   :   2 sts   :   3 sub   :   1 subi  :   4 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 49 out of 116 (42.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000452   1006    100   1106   32768   3.4%
[.dseg] 0x000060 0x000286      0     38     38    2048   1.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
